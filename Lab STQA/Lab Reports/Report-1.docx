
Green University of Bangladesh  
Department of Computer Science and Engineering (CSE) Faculty of Sciences and Engineering 
Semester: (Fall, Year:2024), B.Sc. in CSE (Day) 
Lab Report NO #01
Course Title: Mobile Application Development Lab

          Course Code: CSE 426, Section:213-D2 

Lab Experiment Names: 
 Reliability and Efficiency Analysis.
 Design a test case for your software for doing a usability and integrity testing.
Student Details 
Name 
ID
1.
Nadib Rana
213002247



Submission Date : 09/02/2025 
Course Teacher’s Name : Sakhaouth Hossan


Lab Report Status 
Marks: ………………………………… Signature:..................... Comments:.............................................. Date:..............................













  For Manual 2

1. TITLE OF THE LAB REPORT EXPERIMENT:
 Reliability and Efficiency Analysis
1. Objective: The objective of this lab exercise is to determine the system reliability based on Figure 3 and compare the efficiency among Figures 1, 2, and 3.

2. System Reliability Calculation:
From Figure 3, the system consists of five components with given reliability values:
A: 0.97
B: 0.95
C: 0.90
D: 0.97
E: 0.90
System Configuration:
The system starts with A in series with B and C.
B has two parallel paths: one leading to C and the other leading to D.
C has another parallel path leading to E.
Step 1: Compute Series Reliability
For components in series, the reliability is given by:
Rseries=R1×R2×...×RnR_{series} = R_1 \times R_2 \times ... \times R_n
Applying this formula to the series path A → B → C:
RABC=RA×RB×RC=0.97×0.95×0.90=0.8282
RABC = R_A \times R_B \times
 RC = 0.97 \times 0.95 \times 0.90 = 0.8282
Step 2: Compute Parallel Reliability
For parallel components, the reliability is given by:
Rparallel = 1−((1−R1)×(1−R2))
Rparallel = 1 - ( (1 - R_1) \times (1 - R_2) )


For D and E, the parallel reliability is:
RDE = 1−((1−0.97)×(1−0.90))R_{DE}
        = 1 - ( (1 - 0.97) \times (1 - 0.90) ) 
        = 1−(0.03×0.10)=1−0.003=0.997= 1 - (0.03 \times 0.10)
        = 1 - 0.003 
        = 0.997
Step 3: Compute Overall System Reliability
Now, considering the overall system reliability, since B and D are in parallel, and C and E are in parallel, the system reliability can be expressed as:
Rsystem=RA×[1−((1−RB)×(1−RD))]×[1−((1−RC)×(1−RE))]
Rsystem = R_A \times [1 - ( (1 - R_B) \times (1 - R_D) )] \times [1 - ( (1 - R_C) \times (1 - R_E) )]
Substitute the given values:
Rsystem=0.97×[1−((1−0.95)×(1−0.97))]×[1−((1−0.90)×(1−0.90))]
Rsystem = 0.97 \times [1 - ( (1 - 0.95) \times (1 - 0.97) )] \times [1 - ( (1 - 0.90) \times (1 - 0.90) )]
Breaking it down step-by-step:
Rsystem = 0.97×[1−(0.05×0.03)]×[1−(0.10×0.10)]
Rsystem = 0.97 \times [1 - (0.05 \times 0.03)] \times [1 - (0.10 \times 0.10)] 
Rsystem = 0.97×[1−0.0015]×[1−0.01]R_{system} = 0.97 \times [1 - 0.0015] \times [1 - 0.01] 
Rsystem = 0.97×0.9985×0.99R_{system} = 0.97 \times 0.9985 \times 0.99

Rsystem = 0.9675R_{system} = 0.9675
The overall system reliability is 0.9675 (or 96.75%).



3. Comparison of Efficiency: 
Figure 1: Series system with Rs = 82.9%
Figure 2: Parallel backup system with Rs = 87.1%
Figure 3: Mixed system (series-parallel) with Rs = 96.75%
Analysis:
Since system failure results from component failures, Figure 1 has the lowest dependability.
Component B is given redundancy in Figure 2, which increases reliability.
Multiple redundant paths in Figure 3 ensure improved fault tolerance and the maximum reliability.
Thus, Figure 3 is the most efficient in terms of system reliability.

4. Conclusion: The system reliability for Figure 3 is 96.75%, which is higher than Figures 1 and 2. The introduction of parallel components enhances the fault tolerance of the system, making it the most efficient design. Future considerations can include cost analysis to balance reliability and resource usage.


                                  


   For Manual 3

1. TITLE OF THE LAB REPORT EXPERIMENT:
Design a Test Case for Software Usability and Integrity Testing
2. OBJECTIVES/AIM:
Manual 2:
 To create test cases to evaluate the ease of use and integrity of the software.
To ensure the user interface is simple and convenient.
To maintain accuracy and consistency in data storage and retrieval.
3. PROCEDURE / ANALYSIS / DESIGN:
Manual:2
Usability Test:
Navigation testing: 
Testing whether users can easily navigate through different parts of the app.
Error handling: 
Testing the system's response to invalid operations and evaluating whether error messages are clear and helpful.
 Interface Clarity: 
Check whether the layout of the elements is clear and usable.
Integrity Test:
Data Input Verification: 
Whether the information entered in the form is being stored and retrieved correctly in the database.
User Login Verification: 
Testing the login system response with valid and invalid information.
Data backup and recovery: 
Check if data is properly backed up and restored.
4. Implementation:
The implementation phase involves executing the designed test cases and documenting the results. Each test case includes a unique identifier, clear test steps, expected outcomes, and pass/fail criteria.
5. Test Case Design:
Test Case ID
Test Case Name
Test Steps
Expected Result
Actual Result
Pass/
Fail
TC001
Usability Test - Navigation
1. Open the app 
2. Navigate through different sections
Smooth and intuitive navigation
Passed
Pass
TC002
Integrity Test - Data Input
1. Enter data 
2. Submit
 3. Retrieve data from the database
Data is correctly stored and retrieved
Passed
Pass
TC003
Usability Test - Error Handling
1. Enter invalid data 
2. Submit
Clear error message with instructions
Failed
Fail
TC004
Integrity Test - User Authentication
1. Login with valid credentials 
2. Attempt login with invalid credentials
Successful login and rejection of invalid attempts
Passed
Pass

6. Analysis and Discussion:
Usability Testing Analysis:
Error handling: The system displayed an error message for invalid inputs, but it lacked clear instructions on how to correct the errors. 
Interface: The interface was generally acceptable, but some users found it cluttered, suggesting a need for a more streamlined design. 
Navigation: Most users found the navigation to be smooth and intuitive, but some sections need better organization.
Integrity Testing Analysis:
Data Input: Data was accurately saved and retrieved by the system.
User Authentication: Only authorized access was permitted by the secure authentication system.
Data Backup: Data integrity was ensured by verifying backup and restore capability.

7. Conclusion:
While the application's usability and integrity are good, there is room for improvement. The user experience could be greatly enhanced by improving error messages, streamlining navigation, and optimizing the user interface. Additionally, reliable and trustworthy data handling procedures should be upheld.


